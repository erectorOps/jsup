#javascript(){{{
<script defer charset="utf-8" type="text/javascript" src="https://erectorops.github.io/jsup/filterabletable.js?ver=20210619"></script>
<script defer charset="utf-8" type="text/javascript" src="https://erectorops.github.io/jsup/sortabletable.js?ver=20210619"></script>
<script type="text/javascript">
document.addEventListener('DOMContentLoaded', function() {
  
  let sortabletable_main = function(table_id, table_html, sortabletableso, filter, multi) {
    table_html.attr('id', table_id);
    let tblElem = table_html[0];
    if (multi) {
      const merged = Array.prototype.slice.call(tblElem.tBodies[0].rows)
        .flatMap(x => Array.prototype.slice.call(x.cells))
        .some(x => x.colSpan > 1 || x.rowSpan > 1);
      if (merged) {
        multi = true;
      }
    }
    let st = new SortableTable(tblElem, sortabletableso, multi);
    if (filter) {
      let ft = new FilterableTable(tblElem, sortabletableso, multi);
    }
  };

  // parse 'Sort' argument
  $('.sortabletable').each(function(index, element) {
    let sortabletableso, table_id;
    let filter = false;
    let multi = false;
    let option = [];
    let args = $('.option:first', element);
    if (args.length !== 0) {
      option = args.text().trim().split(',');
      args.remove();
    }
    if (option.length >= 1) {
      sortabletableso = option[0].split('|').map(x => x.trim());
    } else {
      let cols = $('tr:first td', element).length;
      sortabletableso = Array(cols).fill().map(x => "String");
    }
    
    if (option.length >= 2) {
      let mode = parseInt(option[1].trim()) || 0;
      filter = mode & 1;
      multi = mode & 2;
    }
    
    if (option.length >= 3 && option[2] !== "") {
      table_id = option[2] + index;
    } else {
      table_id = 'sortabletable' + index;
    }
    
    sortabletable_main(table_id, $('table:first', element), sortabletableso, filter, multi);
  });
});
</script>
}}}